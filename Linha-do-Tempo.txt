Linha do Tempo - Java Script

Integrantes: Igor Daniel, Matheus Cavalcante, Matheus Castro






1993: O NCSA Mosaic foi lançado, sendo o primeiro navegador gráfico popular, ajudando a expandir a World Wide Web.

1994: A Mosaic Communications foi fundada, criando o Mosaic Netscape, que foi renomeado para Netscape Navigator para evitar problemas com a marca registrada. A empresa reconheceu a necessidade de tornar a Web mais dinâmica.

1995: A Netscape recrutou Brendan Eich para incorporar a linguagem Scheme no Netscape Navigator. No entanto, decidiram usar Java para complementar a Web. Eles optaram por criar uma linguagem de script com sintaxe semelhante ao Java, chamada inicialmente Mocha e depois LiveScript.

1995 (final): Em 1995 Brendan Eich criou A linguagem foi renomeada para JavaScript, o que causou confusão por sugerir que fosse uma versão do Java, sendo uma estratégia de marketing da Netscape para aproveitar a popularidade do Java.

Equívoco comum: JavaScript não foi influenciado pela linguagem Cmm, como alguns acreditam. Eich nunca ouviu falar de Cmm antes de criar o LiveScript.


Video explicando a História 
A História do JavaScript: Como Uma Linguagem Revolucionou a Internet





2 - Como javaScript se popularizou no mundo


A mudança que alavancou a popularidade do JavaScript foi a introdução do ECMAScript, um padrão que define a sintaxe e o comportamento da linguagem de programação, especificando detalhes como tipos de dados, operadores, estruturas de controle, funções, objetos e métodos. Tendo o mais importante para a sua popularização o ECMAScript 5 (ES5).

ECMAScript 5 (ES5) - (2009):
	O ES5 trouxe novos recursos, incluindo métodos de array adicionais (como map, filter e reduce), getters e setters, além de métodos para manipulação de objetos (como Object.keys e Object.create). 

Essa versão também marca a padronização do conceito de sandboxing, que executa o código JavaScript em um ambiente restrito. Tornando essa a versão mais importante e transformadora já lançada na história do JavaScript.

O ES5 ainda introduziu especificações relacionadas à segurança, como a definição de propriedades não configuráveis, não enumeráveis e não graváveis, que contribuíram para a integridade do ambiente de execução do JS nos navegadores. 



Para detalhes mais específicos acesse: https://youtu.be/Kq4FpMe6cRs?feature=shared 
O vídeo é longo mas explica minuciosamente o (ES5)
bibliografia:https://www.locaweb.com.br/blog/temas/codigo-aberto/evolucao-do-javascript/#:~:text=A%20evolu%C3%A7%C3%A3o%20do%20JavaScript%20%C3%A9,aplica%C3%A7%C3%B5es%20web%20din%C3%A2micas%20e%20interativas.







3 - O JavaScript nos dias de hoje.


O JavaScript por muito tempo foi considerado uma linguagem de programação lenta e “ruim”. Mas no entanto, atualmente essas afirmações já não são tão plausíveis, levando em consideração que hoje em dia ela evoluiu de maneira significativa se tornando bem mais organizada e rápida. 

Foi em 2009 com o surgimento do Node.js que o JavaScript teve seu maior salto de popularização. O Node.js é um ambiente de execução de JavaScript no lado do servidor que possibilita a criação de servidores e aplicações web de alta performance, utilizando uma linguagem que tradicionalmente era usada apenas no front-end. 

Em 2010 surgiu o NPM (Node Package Manager), que como o nome sugere é um gerenciador de pacotes, e sua função principal é facilitar a instalação, atualização e gerenciamento de dependências de bibliotecas e módulos que são utilizados em projetos JavaScript.

Já em 2015, foi a atualização ECMAScript 6 (também conhecido como ES6 ou ES2015) que aumentou ainda mais a popularização do JavaScript, trazendo consigo uma série de novas funcionalidades como: Let e Const para declaração de variáveis.
Arrow functions para funções mais concisas.
Classes para orientação a objetos.
Promises para lidar com operações assíncronas de forma mais eficiente.
Módulos nativos, entre outros recursos.

Desde o ES2015, a especificação ECMAScript passou a ser atualizada anualmente. Algumas das atualizações mais importantes incluem:
Introduzir  o operador de exponenciação (**), async/await para tornar o código assíncrono mais legível e fácil de escrever e etc.

Mas e o JavaScript hoje?

Segundo a pesquisa ‘State of Developer Ecosystem Report 2024’, da JetBrains, a linguagem de programação mais utilizada em 2024 foi o JavaScript, com 61% de desenvolvedores no mundo todo o utilizando principalmente para criar páginas web.

Diferentemente do que muitos pensam, o JavaScript atualmente não serve apenas para programação client-side nos servidores web, apesar de ser onde ele mais é utilizado. Também podemos utilizá-lo do lado servidor através do Node.js, para aplicativos móveis, e até mesmo para as tão populares IA’s por meio de bibliotecas como o TensorFlow.js 

Referências Bibliográficas:
https://developer.mozilla.org/pt-BR/docs/Glossary/JavaScript
https://blog-risingstack-com.translate.goog/history-of-node-js/?_x_tr_sl=en&_x_tr_tl=pt&_x_tr_hl=pt&_x_tr_pto=tc
https://medium.com/@vitorlans/javascript-na-linha-do-tempo-e2dfc1e3a224
https://www.locaweb.com.br/blog/temas/codigo-aberto/evolucao-do-javascript/


